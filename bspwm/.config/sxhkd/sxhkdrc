#
# wm independent hotkeys
#

# terminal emulator
super + {Return,shift + Return,n}
	urxvtc {-e tmux,_,-e nnn}

# program launcher
super + @space
	dmenu_recent

# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd

# Strawberry Music Player
super + {KP_Multiply,KP_Divide,KP_End}
	strawberry --{next,restart-or-previous,play-pause}

# mpv media player
super + {KP_Left,KP_Right,KP_Begin}
	 echo {"seek -10","seek 10","cycle pause"} | socat - /tmp/mpvsocket

# Backlight Control
XF86MonBrightness{Up,Down}
	xbacklight -{inc,dec} 10

# PulseAudio Volume control
{XF86AudioLowerVolume,XF86AudioRaiseVolume,XF86AudioMute}
	pamixer -{ud 5,ui 5,m}

super + {KP_Subtract,KP_Add,KP_Insert}
	pamixer -{ud 5,ui 5,m}

# mansplain
super + F1
	bspc rule --add Zathura --one-shot center=on state=floating rectangle=740x1039+0+0 && apropos . | dmenu -p "Man page: " -l 30 -i -fn "$PANEL_XFT_FONT" -sf "$PANEL_FG_SEL_COLOR" -sb "$PANEL_BG_SEL_COLOR" -nb "$PANEL_BG_COLOR" -nf "$PANEL_FG_COLOR" | awk -F "[ ()]+" "\{print \$2, \$1\}" | xargs -r man -Tpdf | zathura -

# Screenshots
Print
	maim ~/var/screenshot$(date +%s).png

super + Print
	maim -s ~/var/screenshot$(date +%s).png


# 9menu
super + @Menu
	9menu_run

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + r
	bspc wm -r

super + alt + q
	pkill -x panel; bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop focused --layout next

# send the newest marked node to the newest preselected node
super + shift + y
	bspc node newest.marked.local -n newest.!automatic.local

# send the current node to the newest marked node
super + semicolon
	bspc node -n newest.marked

#
# state/flags
#

# set the window state
super + {t,shift + t,f,shift + f}
	bspc node -t {tiled,\~pseudo_tiled,\~floating,\~fullscreen}

# set the node flags
super + {y,u,s,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {h,j,k,l}
	bspc node -f {west,south,north,east}
super + {Left,Down,Up,Right}
	bspc node -f {west,south,north,east}

# focus the node for the given path jump
super + {a,p,b,comma,period}
	bspc node -f @{/,parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }Tab
	bspc node -f {next,prev}.local

# rotate the current node or its parent if it's a leaf
super + {_,shift} + r
	bspc node {focused.\!leaf,@/} -R 90 || bspc node @parent -R 90

# circulate the current node or its parent if it's a leaf
super + {_,shift} + c
	bspc node {focused.\!leaf,@/} -C backward || bspc node @parent -C backward

# vertically flip the current node or its parent if it's a leaf
super + {_,shift} + v
	bspc node {focused.\!leaf,@/} -F vertical || bspc node @parent -F vertical

# horizontally flip the current node or its parent if it's a leaf
super + {_,shift} + apostrophe
	bspc node {focused.\!leaf,@/} -F horizontal || bspc node @parent -F horizontal

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last local node
super + backslash
	bspc node -f last.local

# swap with last local node
super + BackSpace
	bspc node -f last.local.\!hidden && bspc node -s last.local.\!hidden

# swap the current node and the biggest local node, if it is the biggest, take the last
super + shift + BackSpace
	bspc node -s biggest.local.\!hidden || bspc node -s last.local.\!hidden

# swap the pointed node and the focused node
button9
	bspc wm -g | grep -q ':LT:' && (bspc node focused -s pointed || bspc node @/ -C backward )|| bspc node -f next.local
button8
	bspc wm -g | grep -q ':LT:' && (bspc node focused -s pointed || bspc node @/ -C forward )|| bspc node -f prev.local

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# demu focus/swap
super + {grave,minus,equal}
	dmenu_focus.lua {--focus,--swap,--fetch}

# change gap size
super + less
	bspc config window_gap $(( `bspc config window_gap` + 5 ))

super + greater
	bspc config window_gap $(( (val=`bspc config window_gap`) > 5 ? val - 5 : 0 ))

# balance/equalize
super + {_,shift +} e
	bspc node @/ -{E,B}

# equalize with new ratio
# super + g
super + slash
	bspc config split_ratio $(( `bspc config split_ratio` == 0.618034 ? 0.5 : 0.618034 )) && bspc node @/ -E

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
# super + Escape
# 	bspc node -p cancel

# cancel the preselection for the focused desktop
super + Escape
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window, swap a (pseudo-)tiling window
super + shift + h
	bspc wm -g | grep -q ':TF:' && bspc node -v -20 0 || bspc node -s west
super + shift + j
	bspc wm -g | grep -q ':TF:' && bspc node -v 0 20 || bspc node -s south
super + shift + k
	bspc wm -g | grep -q ':TF:' && bspc node -v 0 -20 || bspc node -s north
super + shift + l
	bspc wm -g | grep -q ':TF:' && bspc node -v 20 0 || bspc node -s east
super + shift + Left
	bspc wm -g | grep -q ':TF:' && bspc node -v -20 0 || bspc node -s west
super + shift + Down
	bspc wm -g | grep -q ':TF:' && bspc node -v 0 20 || bspc node -s south
super + shift + Up
	bspc wm -g | grep -q ':TF:' && bspc node -v 0 -20 || bspc node -s north
super + shift + Right
	bspc wm -g | grep -q ':TF:' && bspc node -v 20 0 || bspc node -s east